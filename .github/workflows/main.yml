name: CD/CD

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  create-sdk:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - id: cache
      uses: actions/cache@v1
      with:
        path: .devcontainer/Dockerfile
        key: ${{ runner.os }}-devcontainer-${{ hashFiles('.devcontainer/Dockerfile') }}
    - name: Create SDK
      if: steps.cache.outputs.cache-hit != 'true'
      uses: docker/build-push-action@v1
      with:
          username: juselius
          password: ${{ secrets.DOCKER_HUB }}
          repository: juselius/inf-3910-webapp-sdk
          path: .devcontainer
          tags: latest

  build-release:
    container: juselius/inf-3910-webapp-sdk:latest
    env:
      target: release
    runs-on: ubuntu-latest
    needs: create-sdk
    steps:
    - uses: actions/checkout@v2
    - name: Restore NuGet
      uses: actions/cache@v1
      env:
        cache-name: cache-nuget
      with:
        path: ~/.nuget
        key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/paket.lock') }}
        restore-keys: |
          ${{ runner.os }}-build-${{ env.cache-name }}-
          ${{ runner.os }}-build-
          ${{ runner.os }}-
    - name: Restore npm
      uses: actions/cache@v1
      env:
        cache-name: cache-npm
      with:
        path: ./node_modules
        key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/yarn.lock') }}
        restore-keys:
          ${{ runner.os }}-build-${{ env.cache-name }}-
          ${{ runner.os }}-build-
          ${{ runner.os }}-
    - name: Install dependencies
      run: |
          yarn install
          paket install
    - name: Build
      run: |
        dotnet tool restore
        fake build -t ${{ env.target }}
    - name: Release
      uses: docker/build-push-action@v1
      with:
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
        repository: ${{ github.repository }}/${{ env.target }}
        registry: docker.pkg.github.com
        tags: latest
        tag_with_ref: true
        tag_with_sha: true

  tests:
    container: juselius/inf-3910-webapp-sdk:latest
    runs-on: ubuntu-latest
    needs: create-sdk
    steps:
    - uses: actions/checkout@v2
    - name: Run tests
      run: |
        dotnet tool restore
        yarn install
        paket install
        dotnet run -p Tests/Tests.fsproj

  ui-tests:
    container: juselius/inf-3910-webapp-sdk:latest
    runs-on: ubuntu-latest
    needs: create-sdk
    steps:
    - uses: actions/checkout@v2
    - name: Run tests
      run: |
        dotnet tool restore
        yarn install
        paket install
        dotnet run -p Tests/Tests.fsproj -- --canopy headless

#   build-debug:
#     env:
#       target: debug
#     runs-on: ubuntu-latest
#     steps:
#     - uses: actions/checkout@v2
#     - name: Pull SDK
#       run: |
#         docker login docker.pkg.github.com -u ${{ github.actor }} -p ${{ secrets.GITHUB_TOKEN }}
#         docker pull ${{ env.sdk-image }}
#         docker tag ${{ env.sdk-image }} sdk:latest
#     - name: Restore NuGet
#       uses: actions/cache@v1
#       env:
#         cache-name: cache-nuget
#       with:
#         path: ~/.nuget
#         key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/paket.lock') }}
#         restore-keys: |
#           ${{ runner.os }}-build-${{ env.cache-name }}-
#           ${{ runner.os }}-build-
#           ${{ runner.os }}-
#     - name: Restore npm
#       uses: actions/cache@v1
#       env:
#         cache-name: cache-npm
#       with:
#         path: ./node_modules
#         key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/yarn.lock') }}
#         restore-keys:
#           ${{ runner.os }}-build-${{ env.cache-name }}-
#           ${{ runner.os }}-build-
#           ${{ runner.os }}-
#     - name: Install dependencies
#       uses: ./.github/actions/install-deps
#     - name: Build
#       uses: ./.github/actions/build
#       with:
#         target: ${{ env.target }}
#     - name: Release
#       uses: docker/build-push-action@v1
#       with:
#         username: ${{ github.actor }}
#         password: ${{ secrets.GITHUB_TOKEN }}
#         repository: ${{ github.repository }}/${{ env.target }}
#         registry: docker.pkg.github.com
#         tags: latest
#         tag_with_ref: true
#         tag_with_sha: true
